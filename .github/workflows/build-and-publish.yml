name: Build, Test, and Publish groq-cli-chat

permissions:
  contents: write  # Required for create-release job to upload assets

on:
  push:
    branches:
      - main
  release:
    types: [created]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.1'

      - name: Install dependencies
        run: go mod tidy

      - name: Run tests
        run: go test ./... -v
        continue-on-error: true # Allow workflow to proceed if no tests exist

      - name: Build binaries
        run: make release
        env:
          VERSION: ${{ github.event.release.tag_name || '0.1.0' }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: binaries
          path: bin/release/*
          retention-days: 7

  publish-docker:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v4

      - name: Verify Dockerfiles exist
        run: |
          test -f Dockerfile-debian || (echo "Dockerfile-debian not found" && exit 1)
          test -f Dockerfile-rhel || (echo "Dockerfile-rhel not found" && exit 1)

      - name: Download binaries artifact
        uses: actions/download-artifact@v4
        with:
          name: binaries
          path: bin/release

      - name: Extract binaries
        run: |
          mkdir -p bin/release/linux-amd64
          tar -xzf bin/release/groq-chat-linux-amd64.tar.gz -C bin/release/linux-amd64
          ls -lh bin/release/linux-amd64/groq-chat

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
          ecr: auto
          logout: true

      - name: Build and push (Debian)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-debian
          platforms: linux/amd64
          push: true
          tags: OleksiyM/groq-cli-chat:${{ github.event.release.tag_name }}-debian

      - name: Build and push (RHEL)
        uses: docker/build-push-action@v6
        with:
          context: .
          file: ./Dockerfile-rhel
          platforms: linux/amd64
          push: true
          tags: OleksiyM/groq-cli-chat:${{ github.event.release.tag_name }}-rhel

  create-release:
    if: github.event_name == 'release' && github.event.action == 'created'
    needs: build-and-test
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: binaries

      - name: Upload artifacts to release
        run: |
          if ls *.zip *.tar.gz >/dev/null 2>&1; then
            gh release upload ${{ github.event.release.tag_name }} *.zip *.tar.gz
          else
            echo "No .zip or .tar.gz files found to upload."
            exit 1
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}